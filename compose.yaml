services:
  dbpostgresql:
    image: postgres:12.9
    container_name: dbpostgresql
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mentha_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  dbpostgresql_init:
    image: postgres:12.9
    container_name: dbpostgresql_init
    command: psql -h dbpostgresql -d mentha -U leda -f dump_tests.sql 
    volumes:
      - ./dump_tests.sql:/dump_tests.sql
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    networks:
      - mentha_network
    depends_on:
      dbpostgresql:
        condition: service_started
    

  web:
    build: .
    container_name: django_web
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py migrate contenttypes
      && python manage.py makemigrations admin auth sessions
      && python manage.py migrate admin
      && python manage.py migrate auth
      && python manage.py migrate sessions
      && python manage.py makemigrations diario mentha protocolo
      && python manage.py migrate diario
      && python manage.py migrate mentha
      && python manage.py migrate protocolo
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - mentha_network
    depends_on:
      dbpostgresql:
        condition: service_healthy
      dbpostgresql_init:
        condition: service_started

networks:
  mentha_network:
    driver: bridge

volumes:
  postgres_data: